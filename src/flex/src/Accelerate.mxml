<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="800" height="480" xmlns:controls="controls.*" 
					   currentState="speedometerState"
					   usePreloader="false"
					   creationComplete="onCreationComplete()"
					   initialize="onInitialize()">
	<s:states>
		<s:State name="speedometerState"/>
		<s:State name="dataState"/>
		<s:State name="settingsState"/>
	</s:states>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace controls "controls.*";
		
		@font-face {
			src: url("/Users/mesh/Library/Fonts/Crysta.ttf");
			fontFamily: Crystal;
			fontStyle: italic;
			fontWeight: normal;
			advancedAntiAliasing: true;
			embedAsCFF:true;
			unicodeRange:
				/*U+0041-005A,  Upper-Case [A..Z] */
				/*U+0061-007A,  Lower-Case a-z */
				U+004D,U+0050,U+0048, /* MPH */
				U+0030-0034, /* Numbers [0..4] */
				U+002E-002E; /* Period [.] */
		}		
		
	</fx:Style>
	
	<s:transitions>
		<!--MAIN to DATA -->
		<s:Transition toState="*" fromState="*">
			<s:Move targets="{ [ mainView, dataView, settingsView ] }" duration="{this.TRANSITION_SPEED}"
					effectStart="onTransitionStart(event)" effectEnd="onTransitionEnd(event)"/>
		</s:Transition>

	</s:transitions>	
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script source="AccelerateClass.as" />
	
	<s:BorderContainer 
		backgroundImage="@Embed('assets/images/background_gradient.png')"
		backgroundImageFillMode="scale"
		borderWeight="0"
		height="300" width="800"
		borderVisible="false"
		horizontalCenter="0" verticalCenter="89"></s:BorderContainer>	
	
	<controls:MainView x="0" y="0" x.dataState="-802.2"
					   id="mainView"
					   onDataViewRequest="onDataViewRequest(event)" 
					   x.speedometerState="0" 
					   height="480" width="800" y.dataState="0" x.settingsState="810" y.settingsState="0">
	</controls:MainView>
	<controls:DataView x="560" y="0" x.dataState="0"
					   id="dataView"
					   
					   onMainViewRequest="onMainViewRequest(event)" 
					   x.speedometerState="800" y.speedometerState="0" height="480" width="800" 
					   x.settingsState="1608" y.settingsState="10">
	</controls:DataView>
	
	<s:ButtonBar id="navButtonBar" 
				 y.dataState="425.75" x.dataState="10.4" width.dataState="780" 
				 bottom="10" left="10" right="10"
				 change="onNavChange()" width.settingsState="780" x.settingsState="10.4" 
				 height.settingsState="40" height.dataState="40" left.speedometerState="10" 
				 bottom.speedometerState="10" right.speedometerState="10" height.speedometerState="40" fontSize="18"> 
		<s:layout.speedometerState>
			<s:ButtonBarHorizontalLayout/>
		</s:layout.speedometerState>
		<s:layout.settingsState>
			<s:ButtonBarHorizontalLayout/>
		</s:layout.settingsState>
		<mx:ArrayCollection> 
			<fx:String>Settings</fx:String> 
			<fx:String>Main</fx:String> 
			<fx:String>Data</fx:String> 
		</mx:ArrayCollection> 
	</s:ButtonBar> 	
	<controls:SettingsView x="-800" y="0" id="settingsView" x.settingsState="0"
						   x.dataState="-1641.7" y.dataState="0"
						   onUpdated="onSettingsUpdated(event)">
	</controls:SettingsView>
	
</s:Application>
